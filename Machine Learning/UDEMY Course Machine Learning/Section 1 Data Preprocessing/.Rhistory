R.version
R.version
install.packages(tidyverse)
install.packages('tidyverse')
install.packages("installr")
library(installr)
updateR()
library('installr')
R.version
R.version
# Import Dataset.
dataset = read.csv('Data.csv')
dataset = read.csv('Data.csv')
setwd("D:/05_Data-Science-Codes/General Data Science/Machine Learning/UDEMY Course Machine Learning/Section 1 Data Preprocessing")
# Import Dataset.
dataset = read.csv('Data.csv')
View(dataset)
View(dataset)
View(dataset)
View(dataset)
dataset$Age
View(dataset)
View(dataset)
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
View(dataset)
View(dataset)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
# Categorical Variables.
dataset$Country = factor(dataset&Country,
levels = c("France", "Spain", "Germany"),
labels = c(1, 2, 3))
# Categorical Variables.
dataset$Country = factor(dataset$Country,
levels = c("France", "Spain", "Germany"),
labels = c(1, 2, 3))
View(dataset)
View(dataset)
R.version
dataset$Country.is.unique()
dataset$Country
dataset$Country.labels
dataset$Country.levels
dataset$Country.Levels
dataset$Country
View(dataset)
View(dataset)
View(dataset)
View(dataset)
setwd("D:/05_Data-Science-Codes/General Data Science/Machine Learning/UDEMY Course Machine Learning/Section 1 Data Preprocessing")
# Import Dataset.
dataset = read.csv('Data.csv')
View(dataset)
View(dataset)
# Import Dataset.
dataset = read.csv('Data.csv')
# Replace NA values with the mean value of the column.
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
# Categorical Variables.
dataset$Country = factor(dataset$Country,
levels = c("France", "Spain", "Germany"),
labels = c(1, 2, 3))
View(dataset)
View(dataset)
source('D:/05_Data-Science-Codes/General Data Science/Machine Learning/UDEMY Course Machine Learning/Section 1 Data Preprocessing/GCP_Data_Preprocessing_Basic_Template.R')
View(dataset)
View(dataset)
# Import Dataset.
dataset = read.csv('Data.csv')
View(dataset)
View(dataset)
R.version
# Import Dataset.
dataset = read.csv('Data.csv')
# Replace NA values with the mean value of the column.
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
# Categorical Variables.
dataset$Country = factor(dataset$Country,
levels = c("France", "Spain", "Germany"),
labels = c(1, 2, 3))
View(dataset)
View(dataset)
unique(dataset$Purchased)
length(unique(dataset$Purchased))
sequence(length(unique(dataset$Purchased)))
View(dataset)
View(dataset)
dataset$Purchased = factor(dataset$Purchased,
levels = c(unique(dataset$Purchased)),
labels = c(sequence(length(unique(dataset$Purchased)))))
View(dataset)
View(dataset)
install.packages("caTools")
library(caTools)
set.seed(1)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
View(dataset)
View(dataset)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
View(dataset)
View(dataset)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
testing_set = subset(dataset, split == TRUE)
View(testing_set)
View(testing_set)
View(training_set)
View(training_set)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
testing_set = subset(dataset, split == FALSE)
View(testing_set)
View(testing_set)
training_set = scale(training_set)
testing_set = scale(testing_set)
View(training_set)
View(training_set)
training_set[,2:3] = scale(training_set[,2:3])
testing_set[,2:3]= scale(testing_set[,2:3])
View(testing_set)
View(testing_set)
View(training_set)
View(training_set)
